package com.vandersoncamp.rendimento.business.validate;import com.vandersoncamp.rendimento.model.Cliente;import com.vandersoncamp.rendimento.model.Endereco;import com.vandersoncamp.rendimento.model.RiscoEnum;import com.vandersoncamp.rendimento.util.exception.BusinessException;import javax.enterprise.context.RequestScoped;import java.util.List;/** * Classe de validação dos dados do cliente * @author vanderson.campanholi */@RequestScopedpublic class ClienteValidate {    public void validate(Cliente cliente) {        if (cliente.getNome() == null) {            throw new BusinessException("Não foi informado o nome do cliente");        }        if (cliente.getRendimentoMensal() == null) {            throw new BusinessException("Não foi informado o rendimento mensal do cliente");        }        if (cliente.getRisco() == null) {            throw new BusinessException("Não foi informado o grupo de risco do cliente");        }        if (validaGrupoRisco(cliente.getRisco())) {            throw new BusinessException("Grupo de risco inválido");        }        validaEndereco(cliente.getEnderecos());    }    private Boolean validaGrupoRisco(RiscoEnum risco) {        switch (risco) {            case A:                return false;            case B:                return false;            case C:                return false;            default:                return true;        }    }    private void validaEndereco(List<Endereco> enderecos) {        if (enderecos.isEmpty()) {            throw new BusinessException("Não foi informado um endereço para o cliente");        } else {            for (Endereco endereco : enderecos) {                if (endereco.getLogradouro() == null) {                    throw new BusinessException("Não foi informado o logradouro para o endereço do cliente");                }                if (endereco.getNumero() == null) {                    throw new BusinessException("Não foi informado o número para o endereço do cliente");                }            }        }    }}